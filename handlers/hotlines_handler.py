from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
import json

from utils.keyboards import get_hotlines_keyboard, get_main_menu_keyboard
from utils.texts import get_text

router = Router()

@router.callback_query(F.data == "hotlines")
async def hotlines_menu(callback: CallbackQuery, language: str = "uk"):
    """Show hotlines menu"""
    await callback.answer()
    
    menu_text = get_text("hotlines_menu_text", language,
                        default="üìû –ì–∞—Ä—è—á—ñ –ª—ñ–Ω—ñ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏\n\n–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø –¥–æ–ø–æ–º–æ–≥–∏:")
    
    await callback.message.edit_text(
        menu_text,
        reply_markup=get_hotlines_keyboard(language)
    )

@router.callback_query(F.data.startswith("hotline_"))
async def show_hotlines(callback: CallbackQuery, language: str = "uk"):
    """Show specific category hotlines"""
    await callback.answer()
    
    category = callback.data.split("_")[1]  # crisis, mental, veterans, legal, medical
    
    try:
        # Load hotlines from catalog
        with open("catalog.json", "r", encoding="utf-8") as f:
            catalog = json.load(f)
        
        # Map categories to catalog keys
        category_map = {
            "crisis": "crisis_support",
            "mental": "crisis_support", 
            "veterans": "veterans_support",
            "legal": "veterans_support",
            "medical": "medical_emergency"
        }
        
        catalog_key = category_map.get(category, "crisis_support")
        hotlines = catalog.get("hotlines", {}).get(catalog_key, [])
        
        if not hotlines:
            await callback.message.edit_text(
                get_text("no_hotlines", language, default="–ì–∞—Ä—è—á—ñ –ª—ñ–Ω—ñ—ó –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"),
                reply_markup=get_hotlines_keyboard(language)
            )
            return
        
        # Format hotlines text
        category_titles = {
            "crisis": get_text("crisis_hotlines", language, default="üÜò –ö—Ä–∏–∑–æ–≤—ñ –≥–∞—Ä—è—á—ñ –ª—ñ–Ω—ñ—ó"),
            "mental": get_text("mental_health_hotlines", language, default="üß† –ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞"),
            "veterans": get_text("veterans_hotlines", language, default="üéñÔ∏è –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤"),
            "legal": get_text("legal_hotlines", language, default="‚öñÔ∏è –ü—Ä–∞–≤–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞"),
            "medical": get_text("medical_hotlines", language, default="üè• –ú–µ–¥–∏—á–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞")
        }
        
        hotlines_text = f"**{category_titles.get(category, '–ì–∞—Ä—è—á—ñ –ª—ñ–Ω—ñ—ó')}**\n\n"
        
        for hotline in hotlines:
            name = hotline["name"].get(language, hotline["name"]["uk"])
            phone = hotline["phone"]
            description = hotline["description"].get(language, hotline["description"]["uk"])
            availability = hotline.get("availability", "24/7")
            
            hotlines_text += f"üìû **{name}**\n"
            hotlines_text += f"‚òéÔ∏è {phone}\n"
            hotlines_text += f"üìù {description}\n"
            hotlines_text += f"üïê {availability}\n\n"
        
        # Add emergency notice for crisis hotlines
        if category == "crisis":
            hotlines_text += f"‚ö†Ô∏è **{get_text('emergency_notice', language, default='–£–í–ê–ì–ê')}**\n"
            hotlines_text += get_text("crisis_emergency_text", language,
                                    default="–Ø–∫—â–æ –≤–∏ –ø–µ—Ä–µ–±—É–≤–∞–µ—Ç–µ –≤ –Ω–µ–±–µ–∑–ø–µ—Ü—ñ –∞–±–æ –º–∞—î—Ç–µ –¥—É–º–∫–∏ –ø—Ä–æ —Å–∞–º–æ–≥—É–±—Å—Ç–≤–æ, –Ω–µ–≥–∞–π–Ω–æ –∑–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é!")
        
        # Create keyboard
        keyboard_buttons = []
        
        # Add quick dial buttons for main numbers
        if category == "crisis":
            keyboard_buttons.append([
                InlineKeyboardButton(
                    text="üìû 7333 - " + get_text("call_now", language, default="–ü–æ–¥–∑–≤–æ–Ω–∏—Ç–∏ –∑–∞—Ä–∞–∑"),
                    url="tel:7333"
                )
            ])
            keyboard_buttons.append([
                InlineKeyboardButton(
                    text="üìû 116 123 - " + get_text("call_now", language, default="–ü–æ–¥–∑–≤–æ–Ω–∏—Ç–∏ –∑–∞—Ä–∞–∑"),
                    url="tel:116123"
                )
            ])
        
        # Navigation buttons
        keyboard_buttons.extend([
            [
                InlineKeyboardButton(
                    text=get_text("back_to_hotlines", language, default="–ù–∞–∑–∞–¥ –¥–æ –≥–∞—Ä—è—á–∏—Ö –ª—ñ–Ω—ñ–π"),
                    callback_data="hotlines"
                )
            ],
            [
                InlineKeyboardButton(
                    text=get_text("back_to_menu", language),
                    callback_data="main_menu"
                )
            ]
        ])
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)
        
        await callback.message.edit_text(
            hotlines_text,
            reply_markup=keyboard,
            parse_mode="Markdown"
        )
        
    except Exception as e:
        await callback.message.edit_text(
            get_text("hotlines_error", language, default="–ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –≥–∞—Ä—è—á–∏—Ö –ª—ñ–Ω—ñ–π"),
            reply_markup=get_main_menu_keyboard(language)
        )

@router.callback_query(F.data == "crisis_hotline")
async def crisis_hotline_direct(callback: CallbackQuery, language: str = "uk"):
    """Direct access to crisis hotlines"""
    await callback.answer()
    
    crisis_text = f"üÜò **{get_text('crisis_support_title', language, default='–ö—Ä–∏–∑–æ–≤–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞')}**\n\n"
    
    crisis_text += f"üìû **{get_text('national_suicide_prevention', language, default='–ù–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–∞ –ª—ñ–Ω—ñ—è –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —Å–∞–º–æ–≥—É–±—Å—Ç–≤')}**\n"
    crisis_text += f"‚òéÔ∏è 7333 (–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ, —Ü—ñ–ª–æ–¥–æ–±–æ–≤–æ)\n\n"
    
    crisis_text += f"üìû **{get_text('psychological_support_line', language, default='–õ—ñ–Ω—ñ—è –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –ø—ñ–¥—Ç—Ä–∏–º–∫–∏')}**\n"
    crisis_text += f"‚òéÔ∏è 116 123 (—Ü—ñ–ª–æ–¥–æ–±–æ–≤–æ)\n\n"
    
    crisis_text += f"üìû **{get_text('emergency_services', language, default='–®–≤–∏–¥–∫–∞ –¥–æ–ø–æ–º–æ–≥–∞')}**\n"
    crisis_text += f"‚òéÔ∏è 103\n\n"
    
    remember_text = get_text('remember', language, default="–ü–∞–º'—è—Ç–∞–π—Ç–µ")
    crisis_text += f"‚ù§Ô∏è **{remember_text}:**\n"
    crisis_text += get_text("crisis_remember_text", language,
                           default="‚Ä¢ –í–∏ –Ω–µ —Å–∞–º—ñ\n‚Ä¢ –í–∞—à–µ –∂–∏—Ç—Ç—è –º–∞—î —Ü—ñ–Ω–Ω—ñ—Å—Ç—å\n‚Ä¢ –î–æ–ø–æ–º–æ–≥–∞ –∑–∞–≤–∂–¥–∏ –¥–æ—Å—Ç—É–ø–Ω–∞\n‚Ä¢ –ö—Ä–∏–∑–∏ –º–∏–Ω–∞—é—Ç—å")
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üìû 7333 - " + get_text("call_crisis_line", language, default="–ü–æ–¥–∑–≤–æ–Ω–∏—Ç–∏ –Ω–∞ –∫—Ä–∏–∑–æ–≤—É –ª—ñ–Ω—ñ—é"),
                url="tel:7333"
            )
        ],
        [
            InlineKeyboardButton(
                text="üìû 116 123 - " + get_text("call_support_line", language, default="–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞"),
                url="tel:116123"
            )
        ],
        [
            InlineKeyboardButton(
                text="ü§ñ " + get_text("talk_to_ai", language, default="–ü–æ–≥–æ–≤–æ—Ä–∏—Ç–∏ –∑ –®–Ü"),
                callback_data="ai_chat"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("back_to_hotlines", language, default="–ù–∞–∑–∞–¥ –¥–æ –≥–∞—Ä—è—á–∏—Ö –ª—ñ–Ω—ñ–π"),
                callback_data="hotlines"
            )
        ]
    ])
    
    await callback.message.edit_text(
        crisis_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )
