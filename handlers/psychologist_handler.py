from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

from utils.keyboards import get_main_menu_keyboard
from utils.texts import get_text

router = Router()

@router.callback_query(F.data == "psychologist_online")
async def psychologist_menu(callback: CallbackQuery, language: str = "uk"):
    """Show psychologist connection menu"""
    await callback.answer()
    
    menu_text = f"üßë‚Äç‚öïÔ∏è **{get_text('psychologist_online_title', language, default='–ü—Å–∏—Ö–æ–ª–æ–≥ –æ–Ω–ª–∞–π–Ω')}**\n\n"
    menu_text += get_text("psychologist_intro", language,
                         default="–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∞ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞ –≤—ñ–¥ –∫–≤–∞–ª—ñ—Ñ—ñ–∫–æ–≤–∞–Ω–∏—Ö —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤, —è–∫—ñ —Ä–æ–∑—É–º—ñ—é—Ç—å –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ —Ä–æ–±–æ—Ç–∏ –∑ –≤–µ—Ç–µ—Ä–∞–Ω–∞–º–∏.")
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=get_text("find_psychologist", language, default="–ó–Ω–∞–π—Ç–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞"),
                callback_data="find_psychologist"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("emergency_consultation", language, default="–ï–∫—Å—Ç—Ä–µ–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è"),
                callback_data="emergency_consultation"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("group_therapy", language, default="–ì—Ä—É–ø–æ–≤–∞ —Ç–µ—Ä–∞–ø—ñ—è"),
                callback_data="group_therapy"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("my_sessions", language, default="–ú–æ—ó —Å–µ—Å—ñ—ó"),
                callback_data="my_sessions"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("back_to_menu", language),
                callback_data="main_menu"
            )
        ]
    ])
    
    await callback.message.edit_text(
        menu_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "find_psychologist")
async def find_psychologist(callback: CallbackQuery, language: str = "uk"):
    """Show psychologist search options"""
    await callback.answer()
    
    search_text = f"üîç **{get_text('find_psychologist_title', language, default='–ü–æ—à—É–∫ –ø—Å–∏—Ö–æ–ª–æ–≥–∞')}**\n\n"
    search_text += get_text("psychologist_search_intro", language,
                           default="–û–±–µ—Ä—ñ—Ç—å —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—é –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –≤–∞—à–∏—Ö –ø–æ—Ç—Ä–µ–±:")
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üéñÔ∏è " + get_text("military_trauma", language, default="–í—ñ–π—Å—å–∫–æ–≤—ñ —Ç—Ä–∞–≤–º–∏ —Ç–∞ –ü–¢–°–†"),
                callback_data="psych_military"
            )
        ],
        [
            InlineKeyboardButton(
                text="üòî " + get_text("depression_anxiety", language, default="–î–µ–ø—Ä–µ—Å—ñ—è —Ç–∞ —Ç—Ä–∏–≤–æ–∂–Ω—ñ—Å—Ç—å"),
                callback_data="psych_depression"
            )
        ],
        [
            InlineKeyboardButton(
                text="üë®‚Äçüë©‚Äçüëß‚Äçüë¶ " + get_text("family_therapy", language, default="–°—ñ–º–µ–π–Ω–∞ —Ç–µ—Ä–∞–ø—ñ—è"),
                callback_data="psych_family"
            )
        ],
        [
            InlineKeyboardButton(
                text="üß† " + get_text("cognitive_therapy", language, default="–ö–æ–≥–Ω—ñ—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥—ñ–Ω–∫–æ–≤–∞ —Ç–µ—Ä–∞–ø—ñ—è"),
                callback_data="psych_cognitive"
            )
        ],
        [
            InlineKeyboardButton(
                text="üíä " + get_text("addiction_help", language, default="–î–æ–ø–æ–º–æ–≥–∞ –∑ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—è–º–∏"),
                callback_data="psych_addiction"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("back_to_psychologist", language, default="–ù–∞–∑–∞–¥ –¥–æ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ–≤"),
                callback_data="psychologist_online"
            )
        ]
    ])
    
    await callback.message.edit_text(
        search_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

@router.callback_query(F.data.startswith("psych_"))
async def show_psychologist_category(callback: CallbackQuery, language: str = "uk"):
    """Show psychologists in specific category"""
    await callback.answer()
    
    category = callback.data.split("_")[1]
    
    category_info = {
        "military": {
            "title": get_text("military_trauma_specialists", language, default="–°–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –∑ –≤—ñ–π—Å—å–∫–æ–≤–∏—Ö —Ç—Ä–∞–≤–º"),
            "description": get_text("military_trauma_desc", language,
                                  default="–ü—Å–∏—Ö–æ–ª–æ–≥–∏, —è–∫—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ–∑—É—é—Ç—å—Å—è –Ω–∞ —Ä–æ–±–æ—Ç—ñ –∑ –≤–µ—Ç–µ—Ä–∞–Ω–∞–º–∏ —Ç–∞ –≤—ñ–π—Å—å–∫–æ–≤–∏–º–∏ —Ç—Ä–∞–≤–º–∞–º–∏. –ú–∞—é—Ç—å –¥–æ—Å–≤—ñ–¥ —Ä–æ–±–æ—Ç–∏ –∑ –ü–¢–°–†, —Ñ–ª–µ—à–±–µ–∫–∞–º–∏, –ø—Ä–æ–±–ª–µ–º–∞–º–∏ –∞–¥–∞–ø—Ç–∞—Ü—ñ—ó."),
            "specialists": [
                {"name": "–î—Ä. –û–ª–µ–Ω–∞ –ü–µ—Ç—Ä–µ–Ω–∫–æ", "experience": "15 —Ä–æ–∫—ñ–≤", "rating": "4.9"},
                {"name": "–î—Ä. –ê–Ω–¥—Ä—ñ–π –ö–æ–≤–∞–ª–µ–Ω–∫–æ", "experience": "12 —Ä–æ–∫—ñ–≤", "rating": "4.8"},
                {"name": "–î—Ä. –ú–∞—Ä—ñ—è –Ü–≤–∞–Ω–µ–Ω–∫–æ", "experience": "10 —Ä–æ–∫—ñ–≤", "rating": "4.9"}
            ]
        },
        "depression": {
            "title": get_text("depression_specialists", language, default="–°–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –∑ –¥–µ–ø—Ä–µ—Å—ñ—ó"),
            "description": get_text("depression_desc", language,
                                  default="–ü—Å–∏—Ö–æ–ª–æ–≥–∏, —è–∫—ñ –ø—Ä–∞—Ü—é—é—Ç—å –∑ –¥–µ–ø—Ä–µ—Å–∏–≤–Ω–∏–º–∏ —Ä–æ–∑–ª–∞–¥–∞–º–∏, —Ç—Ä–∏–≤–æ–∂–Ω—ñ—Å—Ç—é —Ç–∞ –µ–º–æ—Ü—ñ–π–Ω–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏."),
            "specialists": [
                {"name": "–î—Ä. –°–≤—ñ—Ç–ª–∞–Ω–∞ –ú–µ–ª—å–Ω–∏–∫", "experience": "18 —Ä–æ–∫—ñ–≤", "rating": "4.9"},
                {"name": "–î—Ä. –Ü–≥–æ—Ä –°–∞–≤—á–µ–Ω–∫–æ", "experience": "14 —Ä–æ–∫—ñ–≤", "rating": "4.7"},
                {"name": "–î—Ä. –ù–∞—Ç–∞–ª—ñ—è –ë–æ–Ω–¥–∞—Ä", "experience": "11 —Ä–æ–∫—ñ–≤", "rating": "4.8"}
            ]
        },
        "family": {
            "title": get_text("family_therapists", language, default="–°—ñ–º–µ–π–Ω—ñ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏"),
            "description": get_text("family_therapy_desc", language,
                                  default="–°–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –∑ —Å—ñ–º–µ–π–Ω–æ—ó —Ç–µ—Ä–∞–ø—ñ—ó, —è–∫—ñ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å –≤—ñ–¥–Ω–æ–≤–∏—Ç–∏ —Å—Ç–æ—Å—É–Ω–∫–∏ —Ç–∞ –≤–∏—Ä—ñ—à–∏—Ç–∏ —Å—ñ–º–µ–π–Ω—ñ –∫–æ–Ω—Ñ–ª—ñ–∫—Ç–∏."),
            "specialists": [
                {"name": "–î—Ä. –¢–µ—Ç—è–Ω–∞ –õ–∏—Å–µ–Ω–∫–æ", "experience": "16 —Ä–æ–∫—ñ–≤", "rating": "4.8"},
                {"name": "–î—Ä. –í–∞—Å–∏–ª—å –ö—Ä–∞–≤—á–µ–Ω–∫–æ", "experience": "13 —Ä–æ–∫—ñ–≤", "rating": "4.7"}
            ]
        },
        "cognitive": {
            "title": get_text("cognitive_therapists", language, default="–ö–ü–¢ —Ç–µ—Ä–∞–ø–µ–≤—Ç–∏"),
            "description": get_text("cognitive_therapy_desc", language,
                                  default="–°–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –∑ –∫–æ–≥–Ω—ñ—Ç–∏–≤–Ω–æ-–ø–æ–≤–µ–¥—ñ–Ω–∫–æ–≤–æ—ó —Ç–µ—Ä–∞–ø—ñ—ó, –µ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—ó –ø—Ä–∏ —Ç—Ä–∏–≤–æ–∂–Ω–æ—Å—Ç—ñ, –¥–µ–ø—Ä–µ—Å—ñ—ó —Ç–∞ –ü–¢–°–†."),
            "specialists": [
                {"name": "–î—Ä. –û–ª–µ–∫—Å–∞–Ω–¥—Ä –ú–æ—Ä–æ–∑–æ–≤", "experience": "14 —Ä–æ–∫—ñ–≤", "rating": "4.9"},
                {"name": "–î—Ä. –Æ–ª—ñ—è –®–µ–≤—á–µ–Ω–∫–æ", "experience": "12 —Ä–æ–∫—ñ–≤", "rating": "4.8"}
            ]
        },
        "addiction": {
            "title": get_text("addiction_specialists", language, default="–°–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏ –∑ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π"),
            "description": get_text("addiction_desc", language,
                                  default="–ü—Å–∏—Ö–æ–ª–æ–≥–∏, —è–∫—ñ –ø—Ä–∞—Ü—é—é—Ç—å –∑ —Ä—ñ–∑–Ω–∏–º–∏ –≤–∏–¥–∞–º–∏ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π —Ç–∞ –¥–æ–ø–æ–º–∞–≥–∞—é—Ç—å —É –≤—ñ–¥–Ω–æ–≤–ª–µ–Ω–Ω—ñ."),
            "specialists": [
                {"name": "–î—Ä. –†–æ–º–∞–Ω –ì—Ä–∏—Ü–µ–Ω–∫–æ", "experience": "17 —Ä–æ–∫—ñ–≤", "rating": "4.8"},
                {"name": "–î—Ä. –Ü—Ä–∏–Ω–∞ –ü–æ–ª—è–∫–æ–≤–∞", "experience": "13 —Ä–æ–∫—ñ–≤", "rating": "4.7"}
            ]
        }
    }
    
    info = category_info.get(category)
    if not info:
        await callback.message.edit_text(
            get_text("category_not_found", language, default="–ö–∞—Ç–µ–≥–æ—Ä—ñ—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞"),
            reply_markup=InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text=get_text("back_to_search", language, default="–ù–∞–∑–∞–¥ –¥–æ –ø–æ—à—É–∫—É"), callback_data="find_psychologist")]
            ])
        )
        return
    
    specialists_text = f"üë®‚Äç‚öïÔ∏è **{info['title']}**\n\n"
    specialists_text += f"üìù {info['description']}\n\n"
    specialists_text += f"**{get_text('available_specialists', language, default='–î–æ—Å—Ç—É–ø–Ω—ñ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç–∏')}:**\n\n"
    
    keyboard_buttons = []
    
    for i, specialist in enumerate(info['specialists'], 1):
        specialists_text += f"{i}. **{specialist['name']}**\n"
        specialists_text += f"   üìÖ {get_text('experience', language, default='–î–æ—Å–≤—ñ–¥')}: {specialist['experience']}\n"
        specialists_text += f"   ‚≠ê {get_text('rating', language, default='–†–µ–π—Ç–∏–Ω–≥')}: {specialist['rating']}/5.0\n\n"
        
        keyboard_buttons.append([
            InlineKeyboardButton(
                text=f"üìÖ {get_text('book_session', language, default='–ó–∞–ø–∏—Å–∞—Ç–∏—Å—è')} - {specialist['name']}",
                callback_data=f"book_session_{i}_{category}"
            )
        ])
    
    keyboard_buttons.extend([
        [
            InlineKeyboardButton(
                text=get_text("back_to_search", language, default="–ù–∞–∑–∞–¥ –¥–æ –ø–æ—à—É–∫—É"),
                callback_data="find_psychologist"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("back_to_psychologist", language, default="–ù–∞–∑–∞–¥ –¥–æ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ–≤"),
                callback_data="psychologist_online"
            )
        ]
    ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)
    
    await callback.message.edit_text(
        specialists_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

@router.callback_query(F.data.startswith("book_session_"))
async def book_session(callback: CallbackQuery, language: str = "uk"):
    """Book session with psychologist"""
    await callback.answer()
    
    # Parse callback data
    parts = callback.data.split("_")
    specialist_id = parts[2]
    category = parts[3]
    
    booking_text = f"üìÖ **{get_text('session_booking', language, default='–ó–∞–ø–∏—Å –Ω–∞ —Å–µ—Å—ñ—é')}**\n\n"
    booking_text += get_text("booking_process", language,
                           default="–î–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é –∑ –ø—Å–∏—Ö–æ–ª–æ–≥–æ–º:\n\n1. –û–±–µ—Ä—ñ—Ç—å –∑—Ä—É—á–Ω–∏–π —á–∞—Å\n2. –í–∫–∞–∂—ñ—Ç—å —Ç–∏–ø –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó\n3. –û–ø–∏—à—ñ—Ç—å –æ—Å–Ω–æ–≤–Ω—É –ø—Ä–æ–±–ª–µ–º—É\n4. –ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –∑–∞–ø–∏—Å")
    
    booking_text += f"\n\n‚ö†Ô∏è **{get_text('important_note', language, default='–í–∞–∂–ª–∏–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è')}:**\n"
    booking_text += get_text("booking_notice", language,
                           default="–°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–∏—Å—É –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ —Ä–æ–∑—Ä–æ–±—Ü—ñ. –ù–∞—Ä–∞–∑—ñ –≤–∏ –º–æ–∂–µ—Ç–µ –∑–≤'—è–∑–∞—Ç–∏—Å—è –∑ –Ω–∞—à–æ—é –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é –¥–ª—è –æ—Ä–≥–∞–Ω—ñ–∑–∞—Ü—ñ—ó –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó.")
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=get_text("contact_support_booking", language, default="–ó–≤'—è–∑–∞—Ç–∏—Å—è –∑ –ø—ñ–¥—Ç—Ä–∏–º–∫–æ—é"),
                callback_data="psychologist_support"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("emergency_consultation", language, default="–ï–∫—Å—Ç—Ä–µ–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è"),
                callback_data="emergency_consultation"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("back_to_specialists", language, default="–ù–∞–∑–∞–¥ –¥–æ —Å–ø–µ—Ü—ñ–∞–ª—ñ—Å—Ç—ñ–≤"),
                callback_data=f"psych_{category}"
            )
        ]
    ])
    
    await callback.message.edit_text(
        booking_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "emergency_consultation")
async def emergency_consultation(callback: CallbackQuery, language: str = "uk"):
    """Handle emergency consultation request"""
    await callback.answer()
    
    emergency_text = f"üÜò **{get_text('emergency_consultation_title', language, default='–ï–∫—Å—Ç—Ä–µ–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è')}**\n\n"
    emergency_text += get_text("emergency_intro", language,
                             default="–Ø–∫—â–æ –≤–∏ –ø–µ—Ä–µ–±—É–≤–∞—î—Ç–µ –≤ –∫—Ä–∏–∑–æ–≤–æ–º—É —Å—Ç–∞–Ω—ñ –∞–±–æ –ø–æ—Ç—Ä–µ–±—É—î—Ç–µ –Ω–µ–≥–∞–π–Ω–æ—ó –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–æ—ó –¥–æ–ø–æ–º–æ–≥–∏:")
    
    emergency_text += f"\n\nüìû **{get_text('immediate_help', language, default='–ù–µ–≥–∞–π–Ω–∞ –¥–æ–ø–æ–º–æ–≥–∞')}:**\n"
    emergency_text += f"‚Ä¢ {get_text('crisis_line', language, default='–ö—Ä–∏–∑–æ–≤–∞ –ª—ñ–Ω—ñ—è')}: 7333\n"
    emergency_text += f"‚Ä¢ {get_text('psychological_support', language, default='–ü—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∞')}: 116 123\n"
    emergency_text += f"‚Ä¢ {get_text('emergency_services', language, default='–®–≤–∏–¥–∫–∞ –¥–æ–ø–æ–º–æ–≥–∞')}: 103\n\n"
    
    emergency_text += f"ü§ñ **{get_text('ai_support', language, default='–®–Ü –ø—ñ–¥—Ç—Ä–∏–º–∫–∞')}:**\n"
    emergency_text += get_text("ai_emergency_help", language,
                             default="–ù–∞—à –®–Ü-–∞—Å–∏—Å—Ç–µ–Ω—Ç –º–æ–∂–µ –Ω–∞–¥–∞—Ç–∏ –Ω–µ–≥–∞–π–Ω—É –ø—ñ–¥—Ç—Ä–∏–º–∫—É —Ç–∞ –¥–æ–ø–æ–º–æ–≥—É –≤ –∫—Ä–∏–∑–æ–≤—ñ–π —Å–∏—Ç—É–∞—Ü—ñ—ó.")
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üìû 7333 - " + get_text("call_crisis_line", language, default="–ü–æ–¥–∑–≤–æ–Ω–∏—Ç–∏ –Ω–∞ –∫—Ä–∏–∑–æ–≤—É –ª—ñ–Ω—ñ—é"),
                url="tel:7333"
            )
        ],
        [
            InlineKeyboardButton(
                text="ü§ñ " + get_text("talk_to_ai_now", language, default="–ü–æ–≥–æ–≤–æ—Ä–∏—Ç–∏ –∑ –®–Ü –∑–∞—Ä–∞–∑"),
                callback_data="ai_chat"
            )
        ],
        [
            InlineKeyboardButton(
                text="ü´Å " + get_text("breathing_exercise", language, default="–î–∏—Ö–∞–ª—å–Ω–∞ –≤–ø—Ä–∞–≤–∞"),
                callback_data="breathing_exercise"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("back_to_psychologist", language, default="–ù–∞–∑–∞–¥ –¥–æ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ–≤"),
                callback_data="psychologist_online"
            )
        ]
    ])
    
    await callback.message.edit_text(
        emergency_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "group_therapy")
async def group_therapy(callback: CallbackQuery, language: str = "uk"):
    """Show group therapy options"""
    await callback.answer()
    
    group_text = f"üë• **{get_text('group_therapy_title', language, default='–ì—Ä—É–ø–æ–≤–∞ —Ç–µ—Ä–∞–ø—ñ—è')}**\n\n"
    group_text += get_text("group_therapy_intro", language,
                         default="–ì—Ä—É–ø–æ–≤–∞ —Ç–µ—Ä–∞–ø—ñ—è - –µ—Ñ–µ–∫—Ç–∏–≤–Ω–∏–π —Å–ø–æ—Å—ñ–± –æ—Ç—Ä–∏–º–∞—Ç–∏ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –≤—ñ–¥ –ª—é–¥–µ–π –∑ –ø–æ–¥—ñ–±–Ω–∏–º –¥–æ—Å–≤—ñ–¥–æ–º.")
    
    group_text += f"\n\nüéØ **{get_text('available_groups', language, default='–î–æ—Å—Ç—É–ø–Ω—ñ –≥—Ä—É–ø–∏')}:**\n\n"
    
    groups = [
        {
            "name": get_text("veterans_support_group", language, default="–ì—Ä—É–ø–∞ –ø—ñ–¥—Ç—Ä–∏–º–∫–∏ –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤"),
            "schedule": get_text("tuesdays_thursdays", language, default="–í—ñ–≤—Ç–æ—Ä–æ–∫, —á–µ—Ç–≤–µ—Ä 18:00"),
            "participants": "8-12"
        },
        {
            "name": get_text("ptsd_group", language, default="–ì—Ä—É–ø–∞ —Ä–æ–±–æ—Ç–∏ –∑ –ü–¢–°–†"),
            "schedule": get_text("mondays_wednesdays", language, default="–ü–æ–Ω–µ–¥—ñ–ª–æ–∫, —Å–µ—Ä–µ–¥–∞ 19:00"),
            "participants": "6-10"
        },
        {
            "name": get_text("family_support_group", language, default="–ì—Ä—É–ø–∞ –¥–ª—è —Å—ñ–º–µ–π –≤–µ—Ç–µ—Ä–∞–Ω—ñ–≤"),
            "schedule": get_text("saturdays", language, default="–°—É–±–æ—Ç–∞ 16:00"),
            "participants": "5-8"
        }
    ]
    
    for i, group in enumerate(groups, 1):
        group_text += f"{i}. **{group['name']}**\n"
        group_text += f"   üìÖ {get_text('schedule', language, default='–†–æ–∑–∫–ª–∞–¥')}: {group['schedule']}\n"
        group_text += f"   üë• {get_text('participants', language, default='–£—á–∞—Å–Ω–∏–∫—ñ–≤')}: {group['participants']}\n\n"
    
    group_text += f"üí° **{get_text('group_benefits', language, default='–ü–µ—Ä–µ–≤–∞–≥–∏ –≥—Ä—É–ø–æ–≤–æ—ó —Ç–µ—Ä–∞–ø—ñ—ó')}:**\n"
    group_text += f"‚Ä¢ {get_text('peer_support', language, default='–ü—ñ–¥—Ç—Ä–∏–º–∫–∞ –æ–¥–Ω–æ–ª—ñ—Ç–∫—ñ–≤')}\n"
    group_text += f"‚Ä¢ {get_text('shared_experience', language, default='–°–ø—ñ–ª—å–Ω–∏–π –¥–æ—Å–≤—ñ–¥')}\n"
    group_text += f"‚Ä¢ {get_text('professional_guidance', language, default='–ü—Ä–æ—Ñ–µ—Å—ñ–π–Ω–µ –∫–µ—Ä—ñ–≤–Ω–∏—Ü—Ç–≤–æ')}\n"
    group_text += f"‚Ä¢ {get_text('confidential_environment', language, default='–ö–æ–Ω—Ñ—ñ–¥–µ–Ω—Ü—ñ–π–Ω–µ —Å–µ—Ä–µ–¥–æ–≤–∏—â–µ')}"
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=get_text("join_group", language, default="–ü—Ä–∏—î–¥–Ω–∞—Ç–∏—Å—è –¥–æ –≥—Ä—É–ø–∏"),
                callback_data="join_group"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("group_info", language, default="–î–µ—Ç–∞–ª—å–Ω–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è"),
                callback_data="group_info"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("back_to_psychologist", language, default="–ù–∞–∑–∞–¥ –¥–æ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ–≤"),
                callback_data="psychologist_online"
            )
        ]
    ])
    
    await callback.message.edit_text(
        group_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )

@router.callback_query(F.data == "my_sessions")
async def my_sessions(callback: CallbackQuery, language: str = "uk"):
    """Show user's therapy sessions"""
    await callback.answer()
    
    sessions_text = f"üìã **{get_text('my_sessions_title', language, default='–ú–æ—ó —Å–µ—Å—ñ—ó')}**\n\n"
    sessions_text += get_text("no_sessions_yet", language,
                            default="–£ –≤–∞—Å –ø–æ–∫–∏ –Ω–µ–º–∞—î –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö —Å–µ—Å—ñ–π –∑ –ø—Å–∏—Ö–æ–ª–æ–≥–∞–º–∏.\n\n–°–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—å —Ñ—É–Ω–∫—Ü—ñ—î—é –ø–æ—à—É–∫—É –ø—Å–∏—Ö–æ–ª–æ–≥–∞ –¥–ª—è –∑–∞–ø–∏—Å—É –Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—é.")
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text=get_text("find_psychologist", language, default="–ó–Ω–∞–π—Ç–∏ –ø—Å–∏—Ö–æ–ª–æ–≥–∞"),
                callback_data="find_psychologist"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("emergency_consultation", language, default="–ï–∫—Å—Ç—Ä–µ–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—è"),
                callback_data="emergency_consultation"
            )
        ],
        [
            InlineKeyboardButton(
                text=get_text("back_to_psychologist", language, default="–ù–∞–∑–∞–¥ –¥–æ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ–≤"),
                callback_data="psychologist_online"
            )
        ]
    ])
    
    await callback.message.edit_text(
        sessions_text,
        reply_markup=keyboard,
        parse_mode="Markdown"
    )